{"ast":null,"code":"var _jsxFileName = \"/home/ravina/Desktop/React_project/Emoji/src/emoji.js\";\nimport React, { Component } from 'react';\nimport Inputs from './input';\nimport json from './emoji.json';\n\nclass Typeemo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.copyToClipboard = text => {\n      // console.log('text', text)\n      this.setState({\n        copySuccess: json.symbol\n      });\n      var textField = document.createElement('textarea');\n      textField.innerText = text;\n      document.body.appendChild(textField);\n      textField.select();\n      document.execCommand('copy');\n      textField.remove();\n    };\n\n    this.state = {\n      jsondata: json,\n      query: '',\n      copySuccess: json\n    };\n  }\n\n  render() {\n    const emojiList = this.state.jsondata.filter(Inputs.search_emoji(this.state.query)).map(shareholder => React.createElement(\"div\", {\n      className: \"shareholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, shareholder.symbol, shareholder.title), React.createElement(\"p\", {\n      className: \"copy\",\n      onClick: this.copyToClipboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Click to copy emoji\")));\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, emojiList);\n  }\n\n}\n\nexport default Typeemo;","map":{"version":3,"sources":["/home/ravina/Desktop/React_project/Emoji/src/emoji.js"],"names":["React","Component","Inputs","json","Typeemo","constructor","props","copyToClipboard","text","setState","copySuccess","symbol","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","state","jsondata","query","render","emojiList","filter","search_emoji","map","shareholder","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAMnBC,eANmB,GAMDC,IAAI,IAAI;AACzB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEP,IAAI,CAACQ;AAApB,OAAd;AAEA,UAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACAF,MAAAA,SAAS,CAACG,SAAV,GAAsBP,IAAtB;AACAK,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACAA,MAAAA,SAAS,CAACM,MAAV;AACAL,MAAAA,QAAQ,CAACM,WAAT,CAAqB,MAArB;AACAP,MAAAA,SAAS,CAACQ,MAAV;AACA,KAhBkB;;AAGlB,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAEnB,IAAZ;AAAkBoB,MAAAA,KAAK,EAAE,EAAzB;AAA6Bb,MAAAA,WAAW,EAAEP;AAA1C,KAAb;AACA;;AAcDqB,EAAAA,MAAM,GAAG;AACR,UAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,MAApB,CAA2BxB,MAAM,CAACyB,YAAP,CAAoB,KAAKN,KAAL,CAAWE,KAA/B,CAA3B,EAAkEK,GAAlE,CAAsEC,WAAW,IAClG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,WAAW,CAAClB,MADd,EAEEkB,WAAW,CAACC,KAFd,CADD,EAMC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAE,KAAKvB,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAND,CADiB,CAAlB;AAYA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKkB,SAAL,CAAP;AACA;;AAjC8B;;AAoChC,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Inputs from './input';\nimport json from './emoji.json';\n\nclass Typeemo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { jsondata: json, query: '', copySuccess: json };\n\t}\n\n\tcopyToClipboard = text => {\n\t\t// console.log('text', text)\n\t\tthis.setState({ copySuccess: json.symbol });\n\n\t\tvar textField = document.createElement('textarea');\n\t\ttextField.innerText = text;\n\t\tdocument.body.appendChild(textField);\n\t\ttextField.select();\n\t\tdocument.execCommand('copy');\n\t\ttextField.remove();\n\t};\n\n\trender() {\n\t\tconst emojiList = this.state.jsondata.filter(Inputs.search_emoji(this.state.query)).map(shareholder => (\n\t\t\t<div className=\"shareholder\">\n\t\t\t\t<p>\n\t\t\t\t\t{shareholder.symbol}\n\t\t\t\t\t{shareholder.title}\n\t\t\t\t</p>\n\n\t\t\t\t<p className=\"copy\" onClick={this.copyToClipboard}>\n\t\t\t\t\tClick to copy emoji\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t));\n\t\treturn <h1>{emojiList}</h1>;\n\t}\n}\n\nexport default Typeemo;\n"]},"metadata":{},"sourceType":"module"}