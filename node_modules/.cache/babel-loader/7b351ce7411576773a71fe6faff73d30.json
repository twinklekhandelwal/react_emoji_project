{"ast":null,"code":"var _jsxFileName = \"/home/ravina/Desktop/React_project/Emoji/src/emoji.js\";\nimport React, { Component } from 'react';\nimport json from './emoji.json';\n\nfunction search_emoji(query) {\n  return function (x) {\n    return x.keywords.toLowerCase().includes(query.toLowerCase());\n  };\n}\n\nclass typeemo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.copyToClipboard = e => {\n      this.div.select();\n      document.execCommand('copy'); // This is just personal preference.\n      // I prefer to not show the the whole text area selected.\n\n      e.target.focus();\n      this.setState({\n        copySuccess: 'Copied!'\n      });\n    };\n\n    this.state = {\n      jsondata: json,\n      query: '',\n      copySuccess: ''\n    };\n  }\n\n  render() {\n    const emojiList = this.state.jsondata.filter(search_emoji(this.state.query)).map(shareholder => React.createElement(\"div\", {\n      className: \"shareholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, shareholder.symbol, shareholder.title, this.state.copyToClipboard, \"copy\"));\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, emojiList);\n  }\n\n}\n\nexport default typeemo;","map":{"version":3,"sources":["/home/ravina/Desktop/React_project/Emoji/src/emoji.js"],"names":["React","Component","json","search_emoji","query","x","keywords","toLowerCase","includes","typeemo","constructor","props","copyToClipboard","e","div","select","document","execCommand","target","focus","setState","copySuccess","state","jsondata","render","emojiList","filter","map","shareholder","symbol","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC3B,SAAO,UAASC,CAAT,EAAW;AACjB,WAAOA,CAAC,CAACC,QAAF,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCJ,KAAK,CAACG,WAAN,EAAlC,CAAP;AACA,GAFD;AAGA;;AACD,MAAME,OAAN,SAAsBR,SAAtB,CAAgC;AAC/BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAKnBC,eALmB,GAKAC,CAAD,IAAO;AACxB,WAAKC,GAAL,CAASC,MAAT;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB,EAFwB,CAGxB;AACA;;AACAJ,MAAAA,CAAC,CAACK,MAAF,CAASC,KAAT;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;AACE,KAZgB;;AAGlB,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAACrB,IAAV;AAAeE,MAAAA,KAAK,EAAC,EAArB;AAAyBiB,MAAAA,WAAW,EAAE;AAAtC,KAAb;AACA;;AAUDG,EAAAA,MAAM,GAAG;AACR,UAAMC,SAAS,GAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,MAApB,CAA2BvB,YAAY,CAAC,KAAKmB,KAAL,CAAWlB,KAAZ,CAAvC,EAA2DuB,GAA3D,CAA+DC,WAAW,IAC3F;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,WAAW,CAACC,MADd,EAEED,WAAW,CAACE,KAFd,EAGE,KAAKR,KAAL,CAAWV,eAHb,SADiB,CAAlB;AASA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKa,SAAL,CAAP;AACA;;AA1B8B;;AA6BhC,eAAehB,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport json from './emoji.json';\n\nfunction search_emoji(query){\n\treturn function(x){\n\t\treturn x.keywords.toLowerCase().includes(query.toLowerCase()) ;\n\t}\n}\nclass typeemo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {jsondata:json,query:'' ,copySuccess: ''};\n\t}\n\tcopyToClipboard = (e) => {\n\t\tthis.div.select();\n\t\tdocument.execCommand('copy');\n\t\t// This is just personal preference.\n\t\t// I prefer to not show the the whole text area selected.\n\t\te.target.focus();\n\t\tthis.setState({ copySuccess: 'Copied!' });\n\t  };\n\t\n\trender() {\n\t\tconst emojiList = this.state.jsondata.filter(search_emoji(this.state.query)).map(shareholder => (\n\t\t\t<div className=\"shareholder\" >\n\t\t\t\t{shareholder.symbol}\n\t\t\t\t{shareholder.title}\n\t\t\t\t{this.state.copyToClipboard}\n\t\t\t\tcopy\n\t\t\t</div>\n\t\t\t\n\t\t));\n\t\treturn <h1>{emojiList}</h1>;\n\t}\n}\n\nexport default typeemo;\n"]},"metadata":{},"sourceType":"module"}