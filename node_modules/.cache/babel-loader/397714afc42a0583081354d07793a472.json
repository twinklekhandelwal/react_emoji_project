{"ast":null,"code":"var _jsxFileName = \"/home/ravina/Desktop/React_project/Emoji/src/emoji.js\";\nimport React, { Component } from 'react';\nimport json from './emoji.json';\n\nfunction search_emoji(query) {\n  return function (x) {\n    return x.keywords.toLowerCase().includes(query.toLowerCase());\n  };\n}\n\nclass typeemo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.copyToClipboard = text => {\n      // console.log('text', text)\n      var textField = document.createElement('textarea');\n      textField.innerText = text;\n      document.body.appendChild(textField);\n      textField.select();\n      document.execCommand('copy');\n      textField.remove();\n    };\n\n    this.state = {\n      jsondata: json,\n      query: '',\n      copySuccess: json.symbol\n    };\n    console.log(copySuccess);\n  }\n\n  render() {\n    const emojiList = this.state.jsondata.filter(search_emoji(this.state.query)).map(shareholder => React.createElement(\"div\", {\n      className: \"shareholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, shareholder.symbol, shareholder.title), React.createElement(\"p\", {\n      class: \"copy\",\n      onClick: this.state.jsondata.symbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Click to copy emoji\")));\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, emojiList);\n  }\n\n}\n\nexport default typeemo;","map":{"version":3,"sources":["/home/ravina/Desktop/React_project/Emoji/src/emoji.js"],"names":["React","Component","json","search_emoji","query","x","keywords","toLowerCase","includes","typeemo","constructor","props","copyToClipboard","text","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","state","jsondata","copySuccess","symbol","console","log","render","emojiList","filter","map","shareholder","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC3B,SAAO,UAASC,CAAT,EAAW;AACjB,WAAOA,CAAC,CAACC,QAAF,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCJ,KAAK,CAACG,WAAN,EAAlC,CAAP;AACA,GAFD;AAGA;;AACD,MAAME,OAAN,SAAsBR,SAAtB,CAAgC;AAC/BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAOnBC,eAPmB,GAOAC,IAAD,IAAU;AAC3B;AACA,UAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACAF,MAAAA,SAAS,CAACG,SAAV,GAAsBJ,IAAtB;AACAE,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACAA,MAAAA,SAAS,CAACM,MAAV;AACAL,MAAAA,QAAQ,CAACM,WAAT,CAAqB,MAArB;AACAP,MAAAA,SAAS,CAACQ,MAAV;AAGE,KAjBgB;;AAGlB,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAACtB,IAAV;AAAeE,MAAAA,KAAK,EAAC,EAArB;AAAyBqB,MAAAA,WAAW,EAACvB,IAAI,CAACwB;AAA1C,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA;;AAcDI,EAAAA,MAAM,GAAG;AACR,UAAMC,SAAS,GAAG,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,MAApB,CAA2B5B,YAAY,CAAC,KAAKoB,KAAL,CAAWnB,KAAZ,CAAvC,EAA2D4B,GAA3D,CAA+DC,WAAW,IAC3F;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,WAAW,CAACP,MAAhB,EACCO,WAAW,CAACC,KADb,CAFD,EAOC;AAAG,MAAA,KAAK,EAAC,MAAT;AAAgB,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,QAAX,CAAoBE,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPD,CADiB,CAAlB;AAaA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,SAAL,CAAP;AACA;;AAnC8B;;AAsChC,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport json from './emoji.json';\n\nfunction search_emoji(query){\n\treturn function(x){\n\t\treturn x.keywords.toLowerCase().includes(query.toLowerCase()) ;\n\t}\n}\nclass typeemo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {jsondata:json,query:'' ,copySuccess:json.symbol};\n\t\tconsole.log(copySuccess)\n\t}\n\t\n\tcopyToClipboard = (text) => {\n\t\t// console.log('text', text)\n\t\tvar textField = document.createElement('textarea')\n\t\ttextField.innerText = text\n\t\tdocument.body.appendChild(textField)\n\t\ttextField.select()\n\t\tdocument.execCommand('copy')\n\t\ttextField.remove()\n\t\t\n    \n\t  }\n\t\n\trender() {\n\t\tconst emojiList = this.state.jsondata.filter(search_emoji(this.state.query)).map(shareholder => (\n\t\t\t<div className=\"shareholder\" >\n\t\t\t\n\t\t\t\t<p>{shareholder.symbol}\n\t\t\t\t{shareholder.title}\n\t\t\t\t</p>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<p class=\"copy\" onClick={this.state.jsondata.symbol}>Click to copy emoji</p>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t));\n\t\treturn <h1>{emojiList}</h1>;\n\t}\n}\n\nexport default typeemo;\n"]},"metadata":{},"sourceType":"module"}